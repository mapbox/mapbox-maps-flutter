plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.mapbox.maps.mapbox_maps_example"
    compileSdk 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

        
    externalNativeBuild {
        cmake {
            version "3.30.3"
            path "../../../../mapbox-sdk/projects/gl-native/CMakeLists.txt"
        }
    }
    
    defaultConfig {
        applicationId "com.mapbox.maps.flutter.example"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndkVersion = "27.0.12077973"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared"
                arguments "-DANDROID_PLATFORM=android-21"
                arguments "-DANDROID_TOOLCHAIN=clang"
                arguments "-DANDROID_ARM_NEON=TRUE"
                arguments "-DANDROID_ARM_MODE=arm"
                arguments "-DANDROID_ABI=arm64-v8a"
                arguments "-DCMAKE_BUILD_TYPE=Release"
                arguments "-DLEAVE_ME_ALONE_I_KNOW_WHAT_I_AM_DOING=1"
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            }
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
        }
        debug {
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Debug"
                    arguments "-DLEAVE_ME_ALONE_I_KNOW_WHAT_I_AM_DOING=1"
                    targets "mapbox-maps-flutter-support"
                }
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
