version: 2.1

orbs: 
  flutter: circleci/flutter@2.0.2
  macos: circleci/macos@2.4.1
  gcp-cli: circleci/gcp-cli@3.1.1

commands:

  inject-netrc-credentials:
    steps:
      - run:
          name: Configure .netrc
          command: |
            echo "machine api.mapbox.com login mapbox password ${SDK_REGISTRY_TOKEN}" >> ~/.netrc
            chmod 0600 ~/.netrc
  
  setup-gcloud:
    steps:
      - gcp-cli/setup:
          version: 466.0.0
          gcloud_service_key: GCLOUD_SERVICE_ACCOUNT_JSON

  add-mapbox-submodules-key:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "9d:db:07:0b:62:81:11:c3:46:21:8e:fa:51:99:80:2d"

jobs:

  build-android:
    parameters:
      workspace-path:
        type: string
        default: example/build/app/outputs/apk
    docker:
      - image: cimg/android:2024.04
    resource_class: 2xlarge
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          version: 3.19.6
          app-dir: example
      - run:
          name: ktlint
          working_directory: example/android
          command: ./gradlew ktlint
      - run:
          name: unit test
          command: flutter test test
      - run:
          name: "Build Android integration tests"
          working_directory: example/android
          command: |
            flutter build apk
            ./gradlew app:assembleAndroidTest
            ./gradlew app:assembleDebug -Ptarget=integration_test/all_test.dart -Pdart-defines="$(echo -n "ACCESS_TOKEN=$MAPBOX_ACCESS_TOKEN" | base64 -w 0)"
      - persist_to_workspace:
          root: << parameters.workspace-path >>
          paths:
            - debug/app-debug.apk
            - androidTest/debug/app-debug-androidTest.apk

  run-android-tests-firebase:
    parameters:
      workspace-path:
        type: string
        default: example/build/app/outputs/apk
    executor: firebase-test-runner
    steps:
      - attach_workspace:
          at: << parameters.workspace-path >>
      - setup-gcloud
      - run:
          name: "Run Android integration tests on Firebase"
          no_output_timeout: 20m
          command: |
            gcloud firebase test android run --type instrumentation \
              --app << parameters.workspace-path >>/debug/app-debug.apk \
              --test << parameters.workspace-path >>/androidTest/debug/app-debug-androidTest.apk \
              --timeout 5m \
              --device model=shiba,version=34,locale=en,orientation=portrait \
              --results-dir=result_dir \
              --use-orchestrator \
              --num-flaky-test-attempts 3 \
              --no-record-video \
              --no-performance-metrics
                         
  build-ios:
    parameters:
      workspace-path:
        type: string
        default: example/build/output
    executor: macos-xcode-latest
    steps:
      - checkout
      - inject-netrc-credentials
      - add-mapbox-submodules-key
      - macos/install-rosetta
      - flutter/install_sdk_and_pub:
          version: 3.19.6
          app-dir: example
      - flutter/install_ios_pod:
          app-dir: example
      - run:
          name: swiftlint
          working_directory: ios
          command: HOMEBREW_NO_AUTO_UPDATE=1 brew install swiftlint; swiftlint lint --strict
      - run:
          name: unit test
          command: flutter test test
      - run:
          name: "Build iOS integration tests"
          command: |
            pushd example

            # required to init configs that pass environment variables to fastlane later
            flutter build ios --config-only integration_test/all_test.dart \
              --release --dart-define=ACCESS_TOKEN=${MAPBOX_ACCESS_TOKEN}

            popd # to repo root

            bundle exec fastlane build_examples_tests
      - persist_to_workspace:
          root: << parameters.workspace-path >>
          paths:
            - build_products.zip

  run-ios-tests-firebase:
    parameters:
      workspace-path:
        type: string
        default: example/build/output
    executor: firebase-test-runner
    steps:
      - attach_workspace:
          at: << parameters.workspace-path >>
      - setup-gcloud
      - run:
          name: "Run iOS integration tests on Firebase"
          no_output_timeout: 20m
          command: |
            gcloud firebase test ios run \
              --test << parameters.workspace-path >>/build_products.zip \
              --device model=iphone13pro,version=15.7 \
              --timeout 5m \
              --num-flaky-test-attempts 3



workflows:
  build:
    jobs:
      - build-android
      - run-android-tests-firebase:
          requires:
            - build-android
      - build-ios
      - run-ios-tests-firebase:
          requires:
            - build-ios

executors:
  macos-xcode-latest:
    resource_class: macos.m1.medium.gen1
    macos:
      xcode: 15.2.0
  firebase-test-runner:
    resource_class: small
    docker:
      - image: cimg/python:3.7
