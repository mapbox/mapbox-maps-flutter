// Autogenerated from Pigeon (v3.2.3), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, FLTIconAnchor) {
  FLTIconAnchorCENTER = 0,
  FLTIconAnchorLEFT = 1,
  FLTIconAnchorRIGHT = 2,
  FLTIconAnchorTOP = 3,
  FLTIconAnchorBOTTOM = 4,
  FLTIconAnchorTOP_LEFT = 5,
  FLTIconAnchorTOP_RIGHT = 6,
  FLTIconAnchorBOTTOM_LEFT = 7,
  FLTIconAnchorBOTTOM_RIGHT = 8,
};

typedef NS_ENUM(NSUInteger, FLTIconPitchAlignment) {
  FLTIconPitchAlignmentMAP = 0,
  FLTIconPitchAlignmentVIEWPORT = 1,
  FLTIconPitchAlignmentAUTO = 2,
};

typedef NS_ENUM(NSUInteger, FLTIconRotationAlignment) {
  FLTIconRotationAlignmentMAP = 0,
  FLTIconRotationAlignmentVIEWPORT = 1,
  FLTIconRotationAlignmentAUTO = 2,
};

typedef NS_ENUM(NSUInteger, FLTIconTextFit) {
  FLTIconTextFitNONE = 0,
  FLTIconTextFitWIDTH = 1,
  FLTIconTextFitHEIGHT = 2,
  FLTIconTextFitBOTH = 3,
};

typedef NS_ENUM(NSUInteger, FLTSymbolPlacement) {
  FLTSymbolPlacementPOINT = 0,
  FLTSymbolPlacementLINE = 1,
  FLTSymbolPlacementLINE_CENTER = 2,
};

typedef NS_ENUM(NSUInteger, FLTSymbolZOrder) {
  FLTSymbolZOrderAUTO = 0,
  FLTSymbolZOrderVIEWPORT_Y = 1,
  FLTSymbolZOrderSOURCE = 2,
};

typedef NS_ENUM(NSUInteger, FLTTextAnchor) {
  FLTTextAnchorCENTER = 0,
  FLTTextAnchorLEFT = 1,
  FLTTextAnchorRIGHT = 2,
  FLTTextAnchorTOP = 3,
  FLTTextAnchorBOTTOM = 4,
  FLTTextAnchorTOP_LEFT = 5,
  FLTTextAnchorTOP_RIGHT = 6,
  FLTTextAnchorBOTTOM_LEFT = 7,
  FLTTextAnchorBOTTOM_RIGHT = 8,
};

typedef NS_ENUM(NSUInteger, FLTTextJustify) {
  FLTTextJustifyAUTO = 0,
  FLTTextJustifyLEFT = 1,
  FLTTextJustifyCENTER = 2,
  FLTTextJustifyRIGHT = 3,
};

typedef NS_ENUM(NSUInteger, FLTTextPitchAlignment) {
  FLTTextPitchAlignmentMAP = 0,
  FLTTextPitchAlignmentVIEWPORT = 1,
  FLTTextPitchAlignmentAUTO = 2,
};

typedef NS_ENUM(NSUInteger, FLTTextRotationAlignment) {
  FLTTextRotationAlignmentMAP = 0,
  FLTTextRotationAlignmentVIEWPORT = 1,
  FLTTextRotationAlignmentAUTO = 2,
};

typedef NS_ENUM(NSUInteger, FLTTextTransform) {
  FLTTextTransformNONE = 0,
  FLTTextTransformUPPERCASE = 1,
  FLTTextTransformLOWERCASE = 2,
};

typedef NS_ENUM(NSUInteger, FLTTextVariableAnchor) {
  FLTTextVariableAnchorCENTER = 0,
  FLTTextVariableAnchorLEFT = 1,
  FLTTextVariableAnchorRIGHT = 2,
  FLTTextVariableAnchorTOP = 3,
  FLTTextVariableAnchorBOTTOM = 4,
  FLTTextVariableAnchorTOP_LEFT = 5,
  FLTTextVariableAnchorTOP_RIGHT = 6,
  FLTTextVariableAnchorBOTTOM_LEFT = 7,
  FLTTextVariableAnchorBOTTOM_RIGHT = 8,
};

typedef NS_ENUM(NSUInteger, FLTTextWritingMode) {
  FLTTextWritingModeHORIZONTAL = 0,
  FLTTextWritingModeVERTICAL = 1,
};

typedef NS_ENUM(NSUInteger, FLTIconTranslateAnchor) {
  FLTIconTranslateAnchorMAP = 0,
  FLTIconTranslateAnchorVIEWPORT = 1,
};

typedef NS_ENUM(NSUInteger, FLTTextTranslateAnchor) {
  FLTTextTranslateAnchorMAP = 0,
  FLTTextTranslateAnchorVIEWPORT = 1,
};

@class FLTPointAnnotation;
@class FLTPointAnnotationOptions;

@interface FLTPointAnnotation : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithId:(NSString *)id
    geometry:(nullable NSDictionary<NSString *, id> *)geometry
    image:(nullable FlutterStandardTypedData *)image
    iconAnchor:(FLTIconAnchor)iconAnchor
    iconImage:(nullable NSString *)iconImage
    iconOffset:(nullable NSArray<NSNumber *> *)iconOffset
    iconRotate:(nullable NSNumber *)iconRotate
    iconSize:(nullable NSNumber *)iconSize
    symbolSortKey:(nullable NSNumber *)symbolSortKey
    textAnchor:(FLTTextAnchor)textAnchor
    textField:(nullable NSString *)textField
    textJustify:(FLTTextJustify)textJustify
    textLetterSpacing:(nullable NSNumber *)textLetterSpacing
    textMaxWidth:(nullable NSNumber *)textMaxWidth
    textOffset:(nullable NSArray<NSNumber *> *)textOffset
    textRadialOffset:(nullable NSNumber *)textRadialOffset
    textRotate:(nullable NSNumber *)textRotate
    textSize:(nullable NSNumber *)textSize
    textTransform:(FLTTextTransform)textTransform
    iconColor:(nullable NSNumber *)iconColor
    iconHaloBlur:(nullable NSNumber *)iconHaloBlur
    iconHaloColor:(nullable NSNumber *)iconHaloColor
    iconHaloWidth:(nullable NSNumber *)iconHaloWidth
    iconOpacity:(nullable NSNumber *)iconOpacity
    textColor:(nullable NSNumber *)textColor
    textHaloBlur:(nullable NSNumber *)textHaloBlur
    textHaloColor:(nullable NSNumber *)textHaloColor
    textHaloWidth:(nullable NSNumber *)textHaloWidth
    textOpacity:(nullable NSNumber *)textOpacity
    userInfo:(nullable NSDictionary<NSString *, id> *)userInfo;
@property(nonatomic, copy) NSString * id;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, id> * geometry;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * image;
@property(nonatomic, assign) FLTIconAnchor iconAnchor;
@property(nonatomic, copy, nullable) NSString * iconImage;
@property(nonatomic, strong, nullable) NSArray<NSNumber *> * iconOffset;
@property(nonatomic, strong, nullable) NSNumber * iconRotate;
@property(nonatomic, strong, nullable) NSNumber * iconSize;
@property(nonatomic, strong, nullable) NSNumber * symbolSortKey;
@property(nonatomic, assign) FLTTextAnchor textAnchor;
@property(nonatomic, copy, nullable) NSString * textField;
@property(nonatomic, assign) FLTTextJustify textJustify;
@property(nonatomic, strong, nullable) NSNumber * textLetterSpacing;
@property(nonatomic, strong, nullable) NSNumber * textMaxWidth;
@property(nonatomic, strong, nullable) NSArray<NSNumber *> * textOffset;
@property(nonatomic, strong, nullable) NSNumber * textRadialOffset;
@property(nonatomic, strong, nullable) NSNumber * textRotate;
@property(nonatomic, strong, nullable) NSNumber * textSize;
@property(nonatomic, assign) FLTTextTransform textTransform;
@property(nonatomic, strong, nullable) NSNumber * iconColor;
@property(nonatomic, strong, nullable) NSNumber * iconHaloBlur;
@property(nonatomic, strong, nullable) NSNumber * iconHaloColor;
@property(nonatomic, strong, nullable) NSNumber * iconHaloWidth;
@property(nonatomic, strong, nullable) NSNumber * iconOpacity;
@property(nonatomic, strong, nullable) NSNumber * textColor;
@property(nonatomic, strong, nullable) NSNumber * textHaloBlur;
@property(nonatomic, strong, nullable) NSNumber * textHaloColor;
@property(nonatomic, strong, nullable) NSNumber * textHaloWidth;
@property(nonatomic, strong, nullable) NSNumber * textOpacity;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, id> * userInfo;
@end

@interface FLTPointAnnotationOptions : NSObject
+ (instancetype)makeWithGeometry:(nullable NSDictionary<NSString *, id> *)geometry
    image:(nullable FlutterStandardTypedData *)image
    iconAnchor:(FLTIconAnchor)iconAnchor
    iconImage:(nullable NSString *)iconImage
    iconOffset:(nullable NSArray<NSNumber *> *)iconOffset
    iconRotate:(nullable NSNumber *)iconRotate
    iconSize:(nullable NSNumber *)iconSize
    symbolSortKey:(nullable NSNumber *)symbolSortKey
    textAnchor:(FLTTextAnchor)textAnchor
    textField:(nullable NSString *)textField
    textJustify:(FLTTextJustify)textJustify
    textLetterSpacing:(nullable NSNumber *)textLetterSpacing
    textMaxWidth:(nullable NSNumber *)textMaxWidth
    textOffset:(nullable NSArray<NSNumber *> *)textOffset
    textRadialOffset:(nullable NSNumber *)textRadialOffset
    textRotate:(nullable NSNumber *)textRotate
    textSize:(nullable NSNumber *)textSize
    textTransform:(FLTTextTransform)textTransform
    iconColor:(nullable NSNumber *)iconColor
    iconHaloBlur:(nullable NSNumber *)iconHaloBlur
    iconHaloColor:(nullable NSNumber *)iconHaloColor
    iconHaloWidth:(nullable NSNumber *)iconHaloWidth
    iconOpacity:(nullable NSNumber *)iconOpacity
    textColor:(nullable NSNumber *)textColor
    textHaloBlur:(nullable NSNumber *)textHaloBlur
    textHaloColor:(nullable NSNumber *)textHaloColor
    textHaloWidth:(nullable NSNumber *)textHaloWidth
    textOpacity:(nullable NSNumber *)textOpacity
    userInfo:(nullable NSDictionary<NSString *, id> *)userInfo;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, id> * geometry;
@property(nonatomic, strong, nullable) FlutterStandardTypedData * image;
@property(nonatomic, assign) FLTIconAnchor iconAnchor;
@property(nonatomic, copy, nullable) NSString * iconImage;
@property(nonatomic, strong, nullable) NSArray<NSNumber *> * iconOffset;
@property(nonatomic, strong, nullable) NSNumber * iconRotate;
@property(nonatomic, strong, nullable) NSNumber * iconSize;
@property(nonatomic, strong, nullable) NSNumber * symbolSortKey;
@property(nonatomic, assign) FLTTextAnchor textAnchor;
@property(nonatomic, copy, nullable) NSString * textField;
@property(nonatomic, assign) FLTTextJustify textJustify;
@property(nonatomic, strong, nullable) NSNumber * textLetterSpacing;
@property(nonatomic, strong, nullable) NSNumber * textMaxWidth;
@property(nonatomic, strong, nullable) NSArray<NSNumber *> * textOffset;
@property(nonatomic, strong, nullable) NSNumber * textRadialOffset;
@property(nonatomic, strong, nullable) NSNumber * textRotate;
@property(nonatomic, strong, nullable) NSNumber * textSize;
@property(nonatomic, assign) FLTTextTransform textTransform;
@property(nonatomic, strong, nullable) NSNumber * iconColor;
@property(nonatomic, strong, nullable) NSNumber * iconHaloBlur;
@property(nonatomic, strong, nullable) NSNumber * iconHaloColor;
@property(nonatomic, strong, nullable) NSNumber * iconHaloWidth;
@property(nonatomic, strong, nullable) NSNumber * iconOpacity;
@property(nonatomic, strong, nullable) NSNumber * textColor;
@property(nonatomic, strong, nullable) NSNumber * textHaloBlur;
@property(nonatomic, strong, nullable) NSNumber * textHaloColor;
@property(nonatomic, strong, nullable) NSNumber * textHaloWidth;
@property(nonatomic, strong, nullable) NSNumber * textOpacity;
@property(nonatomic, strong, nullable) NSDictionary<NSString *, id> * userInfo;
@end

/// The codec used by FLTOnPointAnnotationClickListener.
NSObject<FlutterMessageCodec> *FLTOnPointAnnotationClickListenerGetCodec(void);

@interface FLTOnPointAnnotationClickListener : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onPointAnnotationClickAnnotation:(FLTPointAnnotation *)annotation completion:(void(^)(NSError *_Nullable))completion;
@end
/// The codec used by FLT_PointAnnotationMessager.
NSObject<FlutterMessageCodec> *FLT_PointAnnotationMessagerGetCodec(void);

@protocol FLT_PointAnnotationMessager
- (void)createManagerId:(NSString *)managerId annotationOption:(FLTPointAnnotationOptions *)annotationOption completion:(void(^)(FLTPointAnnotation *_Nullable, FlutterError *_Nullable))completion;
- (void)createMultiManagerId:(NSString *)managerId annotationOptions:(NSArray<FLTPointAnnotationOptions *> *)annotationOptions completion:(void(^)(NSArray<FLTPointAnnotation *> *_Nullable, FlutterError *_Nullable))completion;
- (void)updateManagerId:(NSString *)managerId annotation:(FLTPointAnnotation *)annotation completion:(void(^)(FlutterError *_Nullable))completion;
- (void)deleteManagerId:(NSString *)managerId annotation:(FLTPointAnnotation *)annotation completion:(void(^)(FlutterError *_Nullable))completion;
- (void)deleteAllManagerId:(NSString *)managerId completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getAnnotationsManagerId:(NSString *)managerId completion:(void(^)(NSArray<FLTPointAnnotation *> *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconAllowOverlapManagerId:(NSString *)managerId iconAllowOverlap:(NSNumber *)iconAllowOverlap completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconAllowOverlapManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconIgnorePlacementManagerId:(NSString *)managerId iconIgnorePlacement:(NSNumber *)iconIgnorePlacement completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconIgnorePlacementManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconKeepUprightManagerId:(NSString *)managerId iconKeepUpright:(NSNumber *)iconKeepUpright completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconKeepUprightManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconOptionalManagerId:(NSString *)managerId iconOptional:(NSNumber *)iconOptional completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconOptionalManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconPaddingManagerId:(NSString *)managerId iconPadding:(NSNumber *)iconPadding completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconPaddingManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconPitchAlignmentManagerId:(NSString *)managerId iconPitchAlignment:(FLTIconPitchAlignment)iconPitchAlignment completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconPitchAlignmentManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconRotationAlignmentManagerId:(NSString *)managerId iconRotationAlignment:(FLTIconRotationAlignment)iconRotationAlignment completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconRotationAlignmentManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconTextFitManagerId:(NSString *)managerId iconTextFit:(FLTIconTextFit)iconTextFit completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconTextFitManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconTextFitPaddingManagerId:(NSString *)managerId iconTextFitPadding:(NSArray<NSNumber *> *)iconTextFitPadding completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconTextFitPaddingManagerId:(NSString *)managerId completion:(void(^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion;
- (void)setSymbolAvoidEdgesManagerId:(NSString *)managerId symbolAvoidEdges:(NSNumber *)symbolAvoidEdges completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getSymbolAvoidEdgesManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setSymbolPlacementManagerId:(NSString *)managerId symbolPlacement:(FLTSymbolPlacement)symbolPlacement completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getSymbolPlacementManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setSymbolSpacingManagerId:(NSString *)managerId symbolSpacing:(NSNumber *)symbolSpacing completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getSymbolSpacingManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setSymbolZOrderManagerId:(NSString *)managerId symbolZOrder:(FLTSymbolZOrder)symbolZOrder completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getSymbolZOrderManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextAllowOverlapManagerId:(NSString *)managerId textAllowOverlap:(NSNumber *)textAllowOverlap completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextAllowOverlapManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextFontManagerId:(NSString *)managerId textFont:(NSArray<NSString *> *)textFont completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextFontManagerId:(NSString *)managerId completion:(void(^)(NSArray<NSString *> *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextIgnorePlacementManagerId:(NSString *)managerId textIgnorePlacement:(NSNumber *)textIgnorePlacement completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextIgnorePlacementManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextKeepUprightManagerId:(NSString *)managerId textKeepUpright:(NSNumber *)textKeepUpright completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextKeepUprightManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextLineHeightManagerId:(NSString *)managerId textLineHeight:(NSNumber *)textLineHeight completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextLineHeightManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextMaxAngleManagerId:(NSString *)managerId textMaxAngle:(NSNumber *)textMaxAngle completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextMaxAngleManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextOptionalManagerId:(NSString *)managerId textOptional:(NSNumber *)textOptional completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextOptionalManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextPaddingManagerId:(NSString *)managerId textPadding:(NSNumber *)textPadding completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextPaddingManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextPitchAlignmentManagerId:(NSString *)managerId textPitchAlignment:(FLTTextPitchAlignment)textPitchAlignment completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextPitchAlignmentManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextRotationAlignmentManagerId:(NSString *)managerId textRotationAlignment:(FLTTextRotationAlignment)textRotationAlignment completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextRotationAlignmentManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconTranslateManagerId:(NSString *)managerId iconTranslate:(NSArray<NSNumber *> *)iconTranslate completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconTranslateManagerId:(NSString *)managerId completion:(void(^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion;
- (void)setIconTranslateAnchorManagerId:(NSString *)managerId iconTranslateAnchor:(FLTIconTranslateAnchor)iconTranslateAnchor completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getIconTranslateAnchorManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextTranslateManagerId:(NSString *)managerId textTranslate:(NSArray<NSNumber *> *)textTranslate completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextTranslateManagerId:(NSString *)managerId completion:(void(^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion;
- (void)setTextTranslateAnchorManagerId:(NSString *)managerId textTranslateAnchor:(FLTTextTranslateAnchor)textTranslateAnchor completion:(void(^)(FlutterError *_Nullable))completion;
- (void)getTextTranslateAnchorManagerId:(NSString *)managerId completion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

extern void FLT_PointAnnotationMessagerSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLT_PointAnnotationMessager> *_Nullable api);

NS_ASSUME_NONNULL_END
